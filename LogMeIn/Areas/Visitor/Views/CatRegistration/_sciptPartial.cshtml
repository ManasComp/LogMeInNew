@model int

<partial name="_ValidationScriptsPartial"/>
<script>
    for (i = 0; i < @Model; i++) {
        document.getElementsByClassName("stepIndicator")[i].className += " finish";
    }
    document.getElementsByClassName("stepIndicator")[@Model].className += " active";
    
function transformData(inputData) {
    // console.log(inputData);
    const result = {};

    for (const item of inputData) {
        const name = item['name'];
        const value = item['value'];

        if (name === 'DateOfBirth') {
            if (value === null || value === undefined || value === "") {
                let date = new Date();
                date.setHours(0, 0, 0, 0);
                result[name] = date.toISOString().slice(0, 19);
            } else {
                let date = new Date(value);
                date.setHours(0, 0, 0, 0);
                result[name] = date.toISOString().slice(0, 19);
            }
        } else if (name === 'Gender') {
            if (value === 'Female') {
                result[name] = 0;
            } else {
                result[name] = 1;  // Assuming 'Male' or other values represent 1
            }
        } else if (value === 'true' || value === 'false') {
            result[name] = value === 'true';
            }
            else if (value === null || value === undefined || value === "") {
                result[name] = value;
            } else if (!isNaN(Number(value))) {
            result[name] = Number(value);
        } else if  (name === '__RequestVerificationToken' || name === '__Invariant' || name === "editting") {
            
        } else  {
            result[name] = value;
        }
    }
    return result;
}

    
document.getElementById("myButton").addEventListener("click", function (e) {

    var ip = '@TempData["warning"]';

    if (ip == null || ip === '') {
        return;
    }

    let formData = JSON.stringify(transformData($("#formToSubmit").serializeArray()));
    // console.log(formData)
    
    function checkPopupBlocker() {
        const newWindow = window.open("", "_blank");
        if (!newWindow || newWindow.closed || typeof newWindow.closed === "undefined") {
            // Pop-up blocked
            return true;
        } else {
            // Pop-up not blocked
            newWindow.close();
            return false;
        }
    }
    
    if (checkPopupBlocker()) {
        return;
    }
        e.preventDefault();
    
    $.ajax({
        url: ip,
        type: "POST",
        dataType: "json",
        contentType: "application/json",
        data: formData,
        success: function (data) {
            $("#formToSubmit").submit();
        },
        error: function (xhr, status, error) {
            // console.error('An error occurred:', error);
            Swal.fire({
                title: 'Jsou data správně?',
                text: JSON.parse(xhr.responseText).message,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Ano, pokračovat'
            }).then((result) => {
                if (result.isConfirmed) {
                    $("#formToSubmit").submit();
                }
            });
        }
    });
    

});

</script>